generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model client {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  topic       topic[]
  website     website[]
}

model scraped_data {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  summary    String?
  link       String?  @db.VarChar(255)
  image      String?  @db.VarChar(255)
  text       String?
  topic_id   String?  @db.Uuid
  website_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  topic      topic?   @relation(fields: [topic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  website    website? @relation(fields: [website_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model topic {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(255)
  client_id    String?        @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  scraped_data scraped_data[]
  client       client?        @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  client      client[]
}

model website {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  url          String         @db.VarChar(255)
  client_id    String?        @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  scraped_data scraped_data[]
  client       client?        @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
